


# help: 1 of 3
# From:	Andrew Dunstan <andrew(at)dunslane(dot)net>
# To:	PostgreSQL-development <pgsql-hackers(at)postgresql(dot)org>
# Subject:	msys2
# Date:	2018-10-07 19:32:44
# Message-ID:	9f4f22be-f9f1-b350-bc06-521226b87f7a@dunslane.net
# Views:	Raw Message | Whole Thread | Download mbox | Resend email
# Thread:
# 2018-10-07 19:32:44 from Andrew Dunstan <andrew(at)dunslane(dot)net>
# Lists:	pgsql-hackers
# https://www.postgresql.org/message-id/9f4f22be-f9f1-b350-bc06-521226b87f7a%40dunslane.net


# help: 2 of 3
# Developing PostgreSQL for Windows, Part 3
# March 24, 2020/in Eisentraut's PlanetPostgreSQL, PostgreSQL /by Peter Eisentraut
# https://www.2ndquadrant.com/en/blog/developing-postgresql-windows-part-3/
# . . .
# some AppVeyor files
# From:	Peter Eisentraut <peter(dot)eisentraut(at)2ndquadrant(dot)com>
# To:	pgsql-hackers <pgsql-hackers(at)postgresql(dot)org>
# Subject:	some AppVeyor files
# Date:	2020-03-23 16:05:33
# Message-ID:	d8e78714-dc77-4a64-783f-e863ba4d951f@2ndquadrant.com
# Views:	Raw Message | Whole Thread | Download mbox | Resend email
# Thread:
# 2020-03-23 16:05:33 from Peter Eisentraut <peter(dot)eisentraut(at)2ndquadrant(dot)com>
# Lists:	pgsql-hackers ### MOSTLY HERE ###
# https://www.postgresql.org/message-id/d8e78714-dc77-4a64-783f-e863ba4d951f%402ndquadrant.com
# . . .
# From a04c2140482645a810bfd682b204bac5194eea8d Mon Sep 17 00:00:00 2001
# From: Peter Eisentraut <peter@eisentraut.org>
# Date: Tue, 10 Mar 2020 19:23:46 +0100
# Subject: [PATCH] AppVeyor configuration for MinGW
# https://www.postgresql.org/message-id/attachment/109033/0001-AppVeyor-configuration-for-MinGW.patch


# help: 3 of 3
# Package: mingw-w64-x86_64-postgresql
# Libraries for use with PostgreSQL (mingw-w64)
# https://github.com/msys2/MINGW-packages/blob/master/mingw-w64-postgresql/PKGBUILD
# and
# https://packages.msys2.org/package/mingw-w64-x86_64-postgresql


# also help from 4 of 4
# https://github.com/AndreMikulec/plr/blob/340005ce48ff8ca98f05eb8788fed8fd5bc459ba/appveyor.yml
# and its run 
# https://ci.appveyor.com/project/AndreMikulec/plr/builds/38431791/job/ah2pwypilr2rf40l?fullLog=true



version: 1.0.{build}.{branch}

image: Visual Studio 2015

# Do not build on tags (GitHub and BitBucket)
skip_tags: true

# Start builds on tags only (GitHub and BitBucket)
# skip_non_tags: true

# Skipping commits affecting specific files (GitHub only).
skip_commits:
  files:
  message: /\[skip ci]/

# set clone depth
clone_depth: 1


environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  PGOPTIONS: -c log_error_verbosity=verbose -c log_min_messages=debug2 -c log_min_error_statement=debug2
  matrix:
  - compiler: msvc
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
    PlatformToolset: v141
    configuration: Release
    platform: x64
  - compiler: msys2
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    MSYSTEM: MINGW32
  - compiler: msys2
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    MSYSTEM: MINGW64
  - compiler: cygwin
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    CYG_ARCH: x86
    CYG_ROOT: C:/cygwin
  - compiler: cygwin
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    CYG_ARCH: x86_64
    CYG_ROOT: C:/cygwin64

# https://www.postgresql.org/message-id/flat/f1caef93-9640-022e-9211-bbe8755a56b0%402ndQuadrant.com
# does this help?
# https://www.postgresql-archive.org/BUG-16774-PostgreSQL-clean-build-MINGW64-gcc-but-initdb-fails-cannot-find-startadress-CreateProcessAA-td6167336.html
# specifically (Alexander Lakhin-2)
# https://www.postgresql-archive.org/attachment/6187142/0/make_check11.txt
matrix:
  allow_failures:
  - compiler: msys2
    MSYSTEM: MINGW64

for:

-
# https://www.postgresql.org/message-id/attachment/109034/0001-AppVeyor-configuration-for-MSVC.patch
#
  matrix:
    only:
      - compiler: msvc

  install:
    - git clone --depth 1 --single-branch --branch=master https://git.postgresql.org/git/postgresql.git c:\projects\postgresql
    - cd c:\projects\postgresql
    - appveyor-retry cinst winflexbison
    - rename c:\ProgramData\chocolatey\bin\win_flex.exe flex.exe
    - rename c:\ProgramData\chocolatey\bin\win_bison.exe bison.exe
    #### - '"C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64'
    #### - '"C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x86_amd64'

  before_build:
    - perl src/tools/msvc/mkvcbuild.pl

  build:
    project: pgsql.sln

  after_build:
    - dir

  test_script:
    - cd src/tools/msvc && vcregress check
    - cd src/tools/msvc && vcregress ecpgcheck



-
# https://www.postgresql.org/message-id/attachment/109033/0001-AppVeyor-configuration-for-MinGW.patch
#
  matrix:
    only:
      - compiler: msys2

  install:
    - git clone --depth 1 --single-branch --branch=master https://git.postgresql.org/git/postgresql.git c:\projects\postgresql
    - cd c:\projects\postgresql
    - set PATH=C:/msys64/usr/bin;%PATH%
    - bash -login -c "pacman --noconfirm -S --needed ${MINGW_PACKAGE_PREFIX}-gettext ${MINGW_PACKAGE_PREFIX}-icu ${MINGW_PACKAGE_PREFIX}-libxml2 ${MINGW_PACKAGE_PREFIX}-libxslt ${MINGW_PACKAGE_PREFIX}-openssl"
    - bash -login -c "curl -L http://cpanmin.us | perl - --self-upgrade"
    - bash -login -c "cpanm --notest IPC::Run"

  build_script:
    - set HOME=.
    - set PATH=C:/msys64/usr/bin;%PATH%
    - bash -login -c "gcc --version"
    - bash -login -c "./configure --enable-cassert --enable-debug --enable-nls --enable-tap-tests --with-icu --with-ldap --with-libxml --with-libxslt --with-openssl"
    - if "%MSYSTEM%" = "MINGW32" bash -login -c "./configure --enable-cassert --enable-debug --enable-nls --enable-tap-tests --with-icu --with-ldap --with-libxml --with-libxslt --with-openssl"
    - if "%MSYSTEM%" = "MINGW64" bash -login -c "CFLAGS=\"-D WINVER=0x0600 -D _WIN32_WINNT=0x0600\" LIBS=\"-ladvapi32\" ./configure --enable-cassert --enable-debug --enable-nls --enable-tap-tests --with-icu --with-ldap --with-libxml --with-libxslt --with-openssl"
    #### - bash -login -c "make world COPT=-Werror"
    - bash -login -c "make world"
    - dir

  test_script:
    - set HOME=.
    - set PATH=C:/msys64/usr/bin;%PATH%
    #### - bash -login -c "make check-world COPT=-Werror"

  on_failure:
    - set HOME=.
    - bash -login -c "test -f config.status || cat config.log"
    - bash -login -c "find . -name regression.diffs | xargs cat"


-
# https://www.postgresql.org/message-id/attachment/109032/0001-AppVeyor-configuration-for-Cygwin.patch
#
  matrix:
    only:
      - compiler: cygwin

  environment:
    CYG_MIRROR: http://cygwin.mirror.rafal.ca/
    CYG_CACHE: C:/cygwin/var/cache/setup

  install:
    - git clone --depth 1 --single-branch --branch=master https://git.postgresql.org/git/postgresql.git c:\projects\postgresql
    - cd c:\projects\postgresql
    - set PATH=%CYG_ROOT%/bin;%PATH%
    - 'appveyor DownloadFile http://cygwin.com/setup-%CYG_ARCH%.exe -FileName setup.exe'
    - 'setup.exe -qnNdO -R "%CYG_ROOT%" -s "%CYG_MIRROR%" -l "%CYG_CACHE%" -P flex -P libreadline-devel -P libssl-devel -P libxml2-devel -P libxslt-devel -P openldap-devel -P zlib-devel'
    - bash -login -c "cygserver-config --yes"
    - bash -login -c "cygrunsrv -S cygserver"

  build_script:
    - set HOME=.
    - set PATH=%CYG_ROOT%/bin;%PATH%
    - bash -login -c "gcc --version"
    - bash -login -c "./configure --enable-cassert --enable-debug --enable-nls --with-ldap --with-libxml --with-libxslt --with-openssl"
    #### - bash -login -c "make world COPT=-Werror"
    - bash -login -c "make world"
    - dir

  test_script:
    - set HOME=.
    - set PATH=%CYG_ROOT%/bin;%PATH%
    - bash -login -c "make check-world COPT=-Werror"

  on_failure:
    - set HOME=.
    - bash -login -c "test -f config.status || cat config.log"
    - bash -login -c "find . -name regression.diffs | xargs cat"

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false
